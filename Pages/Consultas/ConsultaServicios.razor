@page "/ConsultaServicios"

<EditForm Model="lista">
    <DataAnnotationsValidator />


    <div class="card-header">
        <h3>
            <center> <b>Consulta de Servicios</b></center>
        </h3>
    </div>

    <div class="card-body">

        <form>

            <div class="input-group d-flex align-items-end">

                <InputSelect class="form-select " @bind-Value="filtro">
                    <option value="0">Todos</option>
                    <option value="1">ID</option>
                    <option value="2">Plan</option>
                    <option value="3">Precio</option>
                    <option value="4">Descripcion</option>
                    @* Filtrar por Fecha *@
                </InputSelect>

                <div class="flex-fill mx-2">
                    <label>Critero</label>
                    <input type="text" class="form-control" @bind-value="Criterio" />
                </div>

                <button type="button" class="btn btn-warning" @onclick="Buscar">
                    <i class="oi oi-magnifying-glass mr-2" /> <b>Buscar</b>
                </button>
            </div>

            <div class="input-group d-flex align-items-end">

                <div class="flex-fill mx-2">
                    <label>Fecha Desde</label>
                    <InputDate class="form-control" @bind-Value="FechaDesde" />
                </div>

                <div class="flex-fill mx-2">
                    <label>Fecha Hasta</label>
                    <InputDate class="form-control" @bind-Value="FechaHasta" />
                </div>
            </div>
        </form>
    </div>

    <table class="table table-success table-striped">
        <thead class="thead-dark">
            <tr class="table-info">
                <th>ID</th>
                <th>Plan</th>
                <th>Precio</th>
                <th>Descripcion</th>
                <th>Monto Facturado</th>
                <th>Fecha de Creacion</th>
                <th>Ver</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in lista)
            {
                <tr>
                    <td>@item.ServicioId</td>
                    <td>@item.Plan</td>
                    <td>@item.Precio</td>
                    <td>@item.Descripcion</td>
                    <td>@item.MontoFacturado</td> @* <----Fecha *@
                    <td>@item.FechaCreacion</td> @* <----Fecha *@
                    <td><a class="btn btn-sm btn-outline-primary oi oi-eye"
                        href="RegistroServicios/@item.ServicioId">Ver</a></td>
                </tr>
            }
        </tbody>
    </table>


    @foreach (var items in lista)
    {
        contar = items.ServicioId;
    }
    <label><b>Total Servicios:</b> @contar</label>

</EditForm>

@code {

    public Servicios servicios { get; set; } = new Servicios();

    public string filtro { get; set; }
    public string Criterio { get; set; }
    public int contar;
    public DateTime? FechaDesde { get; set; } = null;
    public DateTime? FechaHasta { get; set; } = null;

    public List<Servicios> lista { get; set; } = new List<Servicios>();

    [Inject]
    public ServiciosBLL serviciosBLL { get; set; }

    private void Buscar()
    {
        if (Criterio != null)
        {
            switch (filtro)
            {
                case "1":
                    if (FechaDesde != null || FechaHasta != null)
                        lista = serviciosBLL.GetList(p => p.ServicioId == int.Parse(Criterio) && (p.FechaCreacion >= FechaDesde &&
                        p.FechaCreacion <= FechaHasta));
                    else
                        lista = serviciosBLL.GetList(p => p.ServicioId == int.Parse(Criterio) || (p.FechaCreacion >= FechaHasta &&
                        p.FechaCreacion <= FechaHasta));
                    break;
                case "2":
                    lista = serviciosBLL.GetList(p => p.Plan.ToLower().Contains(Criterio.ToLower()));
                    break;
                case "3":
                    lista = serviciosBLL.GetList(e => e.Precio == int.Parse(Criterio));
                    break;
                case "4":
                    lista = serviciosBLL.GetList(p => p.Descripcion.ToLower().Contains(Criterio.ToLower()));
                    break;


            }
        }

        else
        {
            lista = serviciosBLL.GetList(p => true);
        }
    }


}