@page "/RegistroServicios"
@page "/RegistroServicios/{ServicioId:int}"

@inject IToastService toastService

<EditForm Model="servicios" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <PageTitle>Registro de Servicios</PageTitle>

    <div class="container">

        <div class="card">

            <div class="card-header">
                <div class="input-group d-flex align-items-end"></div>
                <h3>
                    <center> <b>Registro de Servicios </b></center>
                </h3>
                @* Fecha *@
                <div class="form-group col">
                    <label><b>Fecha </b></label>
                    <InputDate class="form-control" @bind-Value="servicios.FechaCreacion" />
                    <ValidationMessage For="@(() => servicios.FechaCreacion)" />
                </div>
            </div>

            <div class="card-body">

                <div class="form-row align-items-center">

                    <div class="input-group d-flex align-items-end">
                        <div class="form-group col" style="width: 30%">
                            <label><b>Servicio Id</b></label>
                            <div class="input-group">
                                <InputNumber @bind-Value="servicios.ServicioId" class="form-control col-4" />
                            </div>
                        </div>

                        @* Boton Buscar *@
                        <div class="input-group-append">
                            <button type="button" class="btn btn-warning" @onclick="Buscar">
                                <i class="oi oi-magnifying-glass mr-2" /> <b> Buscar</b>
                            </button>
                        </div>

                    </div>

                    @* Plan *@
                    <div class="form-group">

                        <label><b>Plan</b></label>
                        <InputSelect class="form-select " style="width: 30%" @bind-Value="cadena">
                            <option selected hidden value="0">Elegir Plan</option>
                            @foreach (var plan in listadePlanes)
                            {
                                <option value="@plan.Id.ToString()">@plan.Descripcion</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => servicios.Plan)" />
                    </div>

                    <div class="form-group">

                        <label><b>Precio</b></label>
                        <InputNumber class="form-control" @bind-Value="servicios.Precio" placeholder="Ejemplo: 500" />
                        <ValidationMessage For="@(() => servicios.Precio)" />
                    </div>

                    @* Descripcion *@
                    <div class="form-group">

                        <label><b>Descripcion</b></label>
                        <InputText class="form-control" @bind-Value="servicios.Descripcion" />
                        <ValidationMessage For="@(() => servicios.Descripcion)"
                            placeholder="Ejemplo: Ingrese Descripcion" />
                    </div>

                    <div class="form-group">

                        <label><b>Monto Facturado</b></label>
                        <InputNumber readonly class="form-control" @bind-Value="servicios.MontoFacturado"
                            style="width: 20%" />
                        <ValidationMessage For="@(() => servicios.MontoFacturado)"
                            placeholder="Este es el monto total facturado del servicio elegido" />
                    </div>




                    <br>
                    <div class="card-footer">
                        <div class="form-group text-center" display: inline-block>
                            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                            <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>





</EditForm>




@code {
    [Parameter]
    public int ServicioId { get; set; }

    [Inject]
    public ServiciosBLL serviciosBLL { get; set; }

    [Inject]
    public PlanesBLL planesBLL { get; set; }

    public List<Planes> listadePlanes { get; set; } = new List<Planes>();

    public Servicios servicios { get; set; } = new Servicios();
    public Planes planes { get; set; } = new Planes();

    string cadena;
    public List<Servicios> lista2 { get; set; } = new List<Servicios>();

    protected override void OnInitialized()
    {
        servicios.ServicioId = ServicioId;
        listadePlanes = planesBLL.GetList();
        lista2 = serviciosBLL.GetList(t => true);
        listadePlanes = planesBLL.GetList();
        Buscar();



    }


    public void Buscar()
    {
        if (this.servicios.ServicioId > 0)
        {
            Servicios encontrado = serviciosBLL.Buscar(this.servicios.ServicioId);

            if (encontrado != null)
            {
                this.servicios = encontrado;


                toastService.ShowSuccess("Servicio encontrado.");
            }
            else
            {
                toastService.ShowError("No se encontro el Servicio");
            }
        }

    }
    public void Nuevo()
    {
        servicios = new Servicios();
    }



    public void Guardar()
    {
        servicios.Plan = planesBLL.Buscar(int.Parse(cadena));

        if (serviciosBLL.Guardar(servicios))
        {
            Nuevo();
            toastService.ShowInfo("Servicio guardado exitosamente.");
        }
        else
            toastService.ShowError("No se pudo guardar el servicio.");
    }
    public void Eliminar()
    {
        bool eliminado;
        eliminado = serviciosBLL.Eliminar(servicios.ServicioId);
        if (eliminado)
        {
            Nuevo();
            toastService.ShowSuccess("Eliminacion exitosa");
        }
        else
        {
            toastService.ShowError("Eliminacion fallida");
        }

    }

}